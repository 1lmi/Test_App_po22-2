<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestDataSet2" targetNamespace="http://tempuri.org/TestDataSet2.xsd" xmlns:mstns="http://tempuri.org/TestDataSet2.xsd" xmlns="http://tempuri.org/TestDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Test_App_po22_2.Properties.Settings.GlobalReference.Default.TestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AnswersTableAdapter" GeneratorDataComponentClassName="AnswersTableAdapter" Name="Answers" UserDataComponentName="AnswersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Answers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Answers] WHERE (([AnswerID] = @Original_AnswerID) AND ((@IsNull_QuestionID = 1 AND [QuestionID] IS NULL) OR ([QuestionID] = @Original_QuestionID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AnswerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Answers] ([AnswerID], [AnswerText], [QuestionID]) VALUES (@AnswerID, @AnswerText, @QuestionID);
SELECT AnswerID, AnswerText, QuestionID FROM Answers WHERE (AnswerID = @AnswerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AnswerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AnswerText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AnswerText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AnswerID, AnswerText, QuestionID FROM dbo.Answers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Answers] SET [AnswerID] = @AnswerID, [AnswerText] = @AnswerText, [QuestionID] = @QuestionID WHERE (([AnswerID] = @Original_AnswerID) AND ((@IsNull_QuestionID = 1 AND [QuestionID] IS NULL) OR ([QuestionID] = @Original_QuestionID)));
SELECT AnswerID, AnswerText, QuestionID FROM Answers WHERE (AnswerID = @AnswerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AnswerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AnswerText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AnswerText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AnswerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AnswerID" DataSetColumn="AnswerID" />
              <Mapping SourceColumn="AnswerText" DataSetColumn="AnswerText" />
              <Mapping SourceColumn="QuestionID" DataSetColumn="QuestionID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupTableAdapter" GeneratorDataComponentClassName="GroupTableAdapter" Name="Group" UserDataComponentName="GroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.[Group]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group] WHERE (([IDGroup] = @Original_IDGroup) AND ((@IsNull_Group = 1 AND [Group] IS NULL) OR ([Group] = @Original_Group)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Group" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group] ([IDGroup], [Group]) VALUES (@IDGroup, @Group);
SELECT IDGroup, [Group] FROM [Group] WHERE (IDGroup = @IDGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Group" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDGroup, [Group] FROM dbo.[Group]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group] SET [IDGroup] = @IDGroup, [Group] = @Group WHERE (([IDGroup] = @Original_IDGroup) AND ((@IsNull_Group = 1 AND [Group] IS NULL) OR ([Group] = @Original_Group)));
SELECT IDGroup, [Group] FROM [Group] WHERE (IDGroup = @IDGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Group" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Group" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDGroup" DataSetColumn="IDGroup" />
              <Mapping SourceColumn="Group" DataSetColumn="Group" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Person_infoTableAdapter" GeneratorDataComponentClassName="Person_infoTableAdapter" Name="Person_info" UserDataComponentName="Person_infoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Person_info" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Person_info] WHERE (([Name] = @Original_Name) AND ([Family] = @Original_Family) AND ([PersonGroup] = @Original_PersonGroup) AND ([IDPerson] = @Original_IDPerson))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Person_info] ([Name], [Family], [PersonGroup]) VALUES (@Name, @Family, @PersonGroup);
SELECT Name, Family, PersonGroup, IDPerson FROM Person_info WHERE (IDPerson = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Family, PersonGroup, IDPerson FROM dbo.Person_info</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Person_info] SET [Name] = @Name, [Family] = @Family, [PersonGroup] = @PersonGroup WHERE (([Name] = @Original_Name) AND ([Family] = @Original_Family) AND ([PersonGroup] = @Original_PersonGroup) AND ([IDPerson] = @Original_IDPerson));
SELECT Name, Family, PersonGroup, IDPerson FROM Person_info WHERE (IDPerson = @IDPerson)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDPerson" ColumnName="IDPerson" DataSourceName="Test.dbo.Person_info" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Family" DataSetColumn="Family" />
              <Mapping SourceColumn="PersonGroup" DataSetColumn="PersonGroup" />
              <Mapping SourceColumn="IDPerson" DataSetColumn="IDPerson" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QuestionsTableAdapter" GeneratorDataComponentClassName="QuestionsTableAdapter" Name="Questions" UserDataComponentName="QuestionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Questions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Questions] WHERE (([QuestionID] = @Original_QuestionID) AND ((@IsNull_CorrectAnswerID = 1 AND [CorrectAnswerID] IS NULL) OR ([CorrectAnswerID] = @Original_CorrectAnswerID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CorrectAnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CorrectAnswerID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CorrectAnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CorrectAnswerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Questions] ([QuestionID], [QuestionText], [CorrectAnswerID]) VALUES (@QuestionID, @QuestionText, @CorrectAnswerID);
SELECT QuestionID, QuestionText, CorrectAnswerID FROM Questions WHERE (QuestionID = @QuestionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@QuestionText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="QuestionText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CorrectAnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CorrectAnswerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT QuestionID, QuestionText, CorrectAnswerID FROM dbo.Questions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Questions] SET [QuestionID] = @QuestionID, [QuestionText] = @QuestionText, [CorrectAnswerID] = @CorrectAnswerID WHERE (([QuestionID] = @Original_QuestionID) AND ((@IsNull_CorrectAnswerID = 1 AND [CorrectAnswerID] IS NULL) OR ([CorrectAnswerID] = @Original_CorrectAnswerID)));
SELECT QuestionID, QuestionText, CorrectAnswerID FROM Questions WHERE (QuestionID = @QuestionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@QuestionText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="QuestionText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CorrectAnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CorrectAnswerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuestionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CorrectAnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CorrectAnswerID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CorrectAnswerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CorrectAnswerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="QuestionID" DataSetColumn="QuestionID" />
              <Mapping SourceColumn="QuestionText" DataSetColumn="QuestionText" />
              <Mapping SourceColumn="CorrectAnswerID" DataSetColumn="CorrectAnswerID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="TestDataSet2" msprop:Generator_DataSetName="TestDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Answers" msprop:Generator_RowEvHandlerName="AnswersRowChangeEventHandler" msprop:Generator_RowDeletedName="AnswersRowDeleted" msprop:Generator_RowDeletingName="AnswersRowDeleting" msprop:Generator_RowEvArgName="AnswersRowChangeEvent" msprop:Generator_TablePropName="Answers" msprop:Generator_RowChangedName="AnswersRowChanged" msprop:Generator_RowChangingName="AnswersRowChanging" msprop:Generator_TableClassName="AnswersDataTable" msprop:Generator_RowClassName="AnswersRow" msprop:Generator_TableVarName="tableAnswers" msprop:Generator_UserTableName="Answers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AnswerID" msprop:Generator_ColumnPropNameInRow="AnswerID" msprop:Generator_ColumnPropNameInTable="AnswerIDColumn" msprop:Generator_ColumnVarNameInTable="columnAnswerID" msprop:Generator_UserColumnName="AnswerID" type="xs:int" />
              <xs:element name="AnswerText" msprop:Generator_ColumnPropNameInRow="AnswerText" msprop:Generator_ColumnPropNameInTable="AnswerTextColumn" msprop:Generator_ColumnVarNameInTable="columnAnswerText" msprop:Generator_UserColumnName="AnswerText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="QuestionID" msprop:Generator_ColumnPropNameInRow="QuestionID" msprop:Generator_ColumnPropNameInTable="QuestionIDColumn" msprop:Generator_ColumnVarNameInTable="columnQuestionID" msprop:Generator_UserColumnName="QuestionID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Group" msprop:Generator_RowEvHandlerName="GroupRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupRowDeleted" msprop:Generator_RowDeletingName="GroupRowDeleting" msprop:Generator_RowEvArgName="GroupRowChangeEvent" msprop:Generator_TablePropName="Group" msprop:Generator_RowChangedName="GroupRowChanged" msprop:Generator_RowChangingName="GroupRowChanging" msprop:Generator_TableClassName="GroupDataTable" msprop:Generator_RowClassName="GroupRow" msprop:Generator_TableVarName="tableGroup" msprop:Generator_UserTableName="Group">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDGroup" msprop:Generator_ColumnPropNameInRow="IDGroup" msprop:Generator_ColumnPropNameInTable="IDGroupColumn" msprop:Generator_ColumnVarNameInTable="columnIDGroup" msprop:Generator_UserColumnName="IDGroup" type="xs:int" />
              <xs:element name="Group" msprop:Generator_ColumnPropNameInRow="Group" msprop:Generator_ColumnPropNameInTable="GroupColumn" msprop:Generator_ColumnVarNameInTable="columnGroup" msprop:Generator_UserColumnName="Group" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Person_info" msprop:Generator_RowEvHandlerName="Person_infoRowChangeEventHandler" msprop:Generator_RowDeletedName="Person_infoRowDeleted" msprop:Generator_RowDeletingName="Person_infoRowDeleting" msprop:Generator_RowEvArgName="Person_infoRowChangeEvent" msprop:Generator_TablePropName="Person_info" msprop:Generator_RowChangedName="Person_infoRowChanged" msprop:Generator_RowChangingName="Person_infoRowChanging" msprop:Generator_TableClassName="Person_infoDataTable" msprop:Generator_RowClassName="Person_infoRow" msprop:Generator_TableVarName="tablePerson_info" msprop:Generator_UserTableName="Person_info">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Family" msprop:Generator_ColumnPropNameInRow="Family" msprop:Generator_ColumnPropNameInTable="FamilyColumn" msprop:Generator_ColumnVarNameInTable="columnFamily" msprop:Generator_UserColumnName="Family">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PersonGroup" msprop:Generator_ColumnPropNameInRow="PersonGroup" msprop:Generator_ColumnPropNameInTable="PersonGroupColumn" msprop:Generator_ColumnVarNameInTable="columnPersonGroup" msprop:Generator_UserColumnName="PersonGroup">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IDPerson" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="IDPerson" msprop:Generator_ColumnPropNameInTable="IDPersonColumn" msprop:Generator_ColumnVarNameInTable="columnIDPerson" msprop:Generator_UserColumnName="IDPerson" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Questions" msprop:Generator_RowEvHandlerName="QuestionsRowChangeEventHandler" msprop:Generator_RowDeletedName="QuestionsRowDeleted" msprop:Generator_RowDeletingName="QuestionsRowDeleting" msprop:Generator_RowEvArgName="QuestionsRowChangeEvent" msprop:Generator_TablePropName="Questions" msprop:Generator_RowChangedName="QuestionsRowChanged" msprop:Generator_RowChangingName="QuestionsRowChanging" msprop:Generator_TableClassName="QuestionsDataTable" msprop:Generator_RowClassName="QuestionsRow" msprop:Generator_TableVarName="tableQuestions" msprop:Generator_UserTableName="Questions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="QuestionID" msprop:Generator_ColumnPropNameInRow="QuestionID" msprop:Generator_ColumnPropNameInTable="QuestionIDColumn" msprop:Generator_ColumnVarNameInTable="columnQuestionID" msprop:Generator_UserColumnName="QuestionID" type="xs:int" />
              <xs:element name="QuestionText" msprop:Generator_ColumnPropNameInRow="QuestionText" msprop:Generator_ColumnPropNameInTable="QuestionTextColumn" msprop:Generator_ColumnVarNameInTable="columnQuestionText" msprop:Generator_UserColumnName="QuestionText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CorrectAnswerID" msprop:Generator_ColumnPropNameInRow="CorrectAnswerID" msprop:Generator_ColumnPropNameInTable="CorrectAnswerIDColumn" msprop:Generator_ColumnVarNameInTable="columnCorrectAnswerID" msprop:Generator_UserColumnName="CorrectAnswerID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Answers" />
      <xs:field xpath="mstns:AnswerID" />
    </xs:unique>
    <xs:unique name="Group_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group" />
      <xs:field xpath="mstns:IDGroup" />
    </xs:unique>
    <xs:unique name="Person_info_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Person_info" />
      <xs:field xpath="mstns:IDPerson" />
    </xs:unique>
    <xs:unique name="Questions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Questions" />
      <xs:field xpath="mstns:QuestionID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Question_Answer" msdata:parent="Answers" msdata:child="Questions" msdata:parentkey="AnswerID" msdata:childkey="CorrectAnswerID" msprop:Generator_UserParentTable="Answers" msprop:Generator_UserChildTable="Questions" msprop:Generator_RelationVarName="relationFK_Question_Answer" msprop:Generator_ChildPropName="GetQuestionsRows" msprop:Generator_ParentPropName="AnswersRow" msprop:Generator_UserRelationName="FK_Question_Answer" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>