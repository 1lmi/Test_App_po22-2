<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestDataSet1" targetNamespace="http://tempuri.org/TestDataSet1.xsd" xmlns:mstns="http://tempuri.org/TestDataSet1.xsd" xmlns="http://tempuri.org/TestDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Test_App_po22_2.Properties.Settings.GlobalReference.Default.TestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Person_infoTableAdapter" GeneratorDataComponentClassName="Person_infoTableAdapter" Name="Person_info" UserDataComponentName="Person_infoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Person_info" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Person_info] WHERE (([IDPerson] = @Original_IDPerson) AND ([Name] = @Original_Name) AND ([Family] = @Original_Family) AND ([PersonGroup] = @Original_PersonGroup))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Person_info] ([IDPerson], [Name], [Family], [PersonGroup]) VALUES (@IDPerson, @Name, @Family, @PersonGroup);
SELECT IDPerson, Name, Family, PersonGroup FROM Person_info WHERE (IDPerson = @IDPerson)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDPerson, Name, Family, PersonGroup FROM dbo.Person_info</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Person_info] SET [IDPerson] = @IDPerson, [Name] = @Name, [Family] = @Family, [PersonGroup] = @PersonGroup WHERE (([IDPerson] = @Original_IDPerson) AND ([Name] = @Original_Name) AND ([Family] = @Original_Family) AND ([PersonGroup] = @Original_PersonGroup));
SELECT IDPerson, Name, Family, PersonGroup FROM Person_info WHERE (IDPerson = @IDPerson)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Family" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Family" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PersonGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PersonGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDPerson" DataSetColumn="IDPerson" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Family" DataSetColumn="Family" />
              <Mapping SourceColumn="PersonGroup" DataSetColumn="PersonGroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="TestDataSet1" msprop:Generator_DataSetName="TestDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Person_info" msprop:Generator_RowEvHandlerName="Person_infoRowChangeEventHandler" msprop:Generator_RowDeletedName="Person_infoRowDeleted" msprop:Generator_RowDeletingName="Person_infoRowDeleting" msprop:Generator_RowEvArgName="Person_infoRowChangeEvent" msprop:Generator_TablePropName="Person_info" msprop:Generator_RowChangedName="Person_infoRowChanged" msprop:Generator_RowChangingName="Person_infoRowChanging" msprop:Generator_TableClassName="Person_infoDataTable" msprop:Generator_RowClassName="Person_infoRow" msprop:Generator_TableVarName="tablePerson_info" msprop:Generator_UserTableName="Person_info">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDPerson" msprop:Generator_ColumnPropNameInRow="IDPerson" msprop:Generator_ColumnPropNameInTable="IDPersonColumn" msprop:Generator_ColumnVarNameInTable="columnIDPerson" msprop:Generator_UserColumnName="IDPerson" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Family" msprop:Generator_ColumnPropNameInRow="Family" msprop:Generator_ColumnPropNameInTable="FamilyColumn" msprop:Generator_ColumnVarNameInTable="columnFamily" msprop:Generator_UserColumnName="Family">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PersonGroup" msprop:Generator_ColumnPropNameInRow="PersonGroup" msprop:Generator_ColumnPropNameInTable="PersonGroupColumn" msprop:Generator_ColumnVarNameInTable="columnPersonGroup" msprop:Generator_UserColumnName="PersonGroup">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Person_info" />
      <xs:field xpath="mstns:IDPerson" />
    </xs:unique>
  </xs:element>
</xs:schema>